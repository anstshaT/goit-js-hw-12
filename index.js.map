{"version":3,"file":"index.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["export function renderPhotos(arr, photoList, gallery) {\n    const markup = arr.map(({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) => {\n        return `\n            <li class=\"gallery-items\">\n                <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                    <img\n                        class=\"gallery-image\"\n                        src=\"${webformatURL}\"\n                        alt=\"${tags}\"\n                    />\n                </a>\n                <div class=\"info\">\n                    <div class=\"info-item\">\n                        <h3>Likes</h3>\n                        <p>${likes}</p>\n                    </div>\n\n                    <div class=\"info-item\">\n                        <h3>Views</h3>\n                        <p>${views}</p>\n                    </div>\n\n                    <div class=\"info-item\">\n                        <h3>Comments</h3>\n                        <p>${comments}</p>\n                    </div>\n\n                    <div class=\"info-item\">\n                        <h3>Downloads</h3>\n                        <p>${downloads}</p>\n                    </div>\n                </div>\n            </li>\n        `\n    }).join(\"\");\n\n    photoList.innerHTML = \"\";\n\n    photoList.insertAdjacentHTML(\"beforeend\", markup);\n\n    gallery.refresh();\n\n}","export async function fetchFunction(query) {\n    const searchParams = new URLSearchParams({\n        key: \"47628462-4a8006828a6d084475c3078e6\",\n        q: query,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: \"true\",\n    })\n\n    const response = await fetch(\n        `https://pixabay.com/api/?${searchParams}`)\n    \n        if (!response.ok) {\n            throw new Error(response.status)\n        }\n        return await response.json();\n}","import { renderPhotos } from \"./js/render-functions\";\nimport { fetchFunction } from \"./js/pixabay-api\";\n\n// Повідомлення\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// Модальне вікно\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n\nconst form = document.querySelector('.search-form');\nconst input = form.querySelector('#searchInput');\nconst photoList = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\n\nfunction showLoader() {\n    loader.classList.add('active')\n}\n\nfunction hideLoader() {\n    loader.classList.remove('active')\n}\n\n\nform.addEventListener(\"submit\", (evt) => {\n        evt.preventDefault();\n        showLoader();\n        const query = input.value;\n    \n        if(query.trim() === \"\") {\n            console.log(\"Input is empty\");\n            \n            return;\n        }\n    \n        fetchFunction(query)\n        .then((photos) => {\n            console.log(photos);\n            if (photos.hits.length === 0) {\n                iziToast.error({\n                    message: 'Sorry, there are no images matching your search query. Please try again!',\n                    theme: \"dark\",\n                    backgroundColor: \"red\",\n                    messageColor: \"white\",\n                    messageSize: \"16px\",\n                    position: \"topRight\"\n                });\n                return;\n            }\n\n            renderPhotos(photos.hits, photoList, gallery);\n            })\n        .catch((error) => console.log(error))\n        .finally(() => {\n            hideLoader()\n            evt.target.reset()\n        })\n})\n\nlet gallery = new SimpleLightbox('.gallery .gallery-link', {\n        captionsData: 'alt',\n        captionsDelay: 250\n    });\n    gallery.on('show.simplelightbox', function () { \n    });\n    \n    gallery.on('error.simplelightbox', function (e) {\n        console.log(e); \n});"],"names":["renderPhotos","arr","photoList","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","fetchFunction","query","searchParams","response","form","input","loader","showLoader","hideLoader","evt","photos","iziToast","error","SimpleLightbox","e"],"mappings":"6vBAAO,SAASA,EAAaC,EAAKC,EAAWC,EAAS,CAClD,MAAMC,EAASH,EAAI,IAAI,CAAC,CAAC,aAAAI,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAClF;AAAA;AAAA,gDAEiCL,CAAa;AAAA;AAAA;AAAA,+BAG9BD,CAAY;AAAA,+BACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAMNC,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKLC,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKLC,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKRC,CAAS;AAAA;AAAA;AAAA;AAAA,SAKjC,EAAE,KAAK,EAAE,EAEVT,EAAU,UAAY,GAEtBA,EAAU,mBAAmB,YAAaE,CAAM,EAEhDD,EAAQ,QAAO,CAEnB,CC1CO,eAAeS,EAAcC,EAAO,CACvC,MAAMC,EAAe,IAAI,gBAAgB,CACrC,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MACpB,CAAK,EAEKE,EAAW,MAAM,MACnB,4BAA4BD,CAAY,EAAE,EAE1C,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEnC,OAAO,MAAMA,EAAS,MAC9B,CCHA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAQD,EAAK,cAAc,cAAc,EACzCd,EAAY,SAAS,cAAc,UAAU,EAC7CgB,EAAS,SAAS,cAAc,SAAS,EAG/C,SAASC,GAAa,CAClBD,EAAO,UAAU,IAAI,QAAQ,CACjC,CAEA,SAASE,GAAa,CAClBF,EAAO,UAAU,OAAO,QAAQ,CACpC,CAGAF,EAAK,iBAAiB,SAAWK,GAAQ,CACjCA,EAAI,eAAc,EAClBF,IACA,MAAMN,EAAQI,EAAM,MAEpB,GAAGJ,EAAM,KAAM,IAAK,GAAI,CACpB,QAAQ,IAAI,gBAAgB,EAE5B,MACH,CAEDD,EAAcC,CAAK,EAClB,KAAMS,GAAW,CAEd,GADA,QAAQ,IAAIA,CAAM,EACdA,EAAO,KAAK,SAAW,EAAG,CAC1BC,EAAS,MAAM,CACX,QAAS,2EACT,MAAO,OACP,gBAAiB,MACjB,aAAc,QACd,YAAa,OACb,SAAU,UAC9B,CAAiB,EACD,MACH,CAEDvB,EAAasB,EAAO,KAAMpB,EAAWC,CAAO,CACxD,CAAa,EACJ,MAAOqB,GAAU,QAAQ,IAAIA,CAAK,CAAC,EACnC,QAAQ,IAAM,CACXJ,EAAY,EACZC,EAAI,OAAO,MAAO,CAC9B,CAAS,CACT,CAAC,EAED,IAAIlB,EAAU,IAAIsB,EAAe,yBAA0B,CACnD,aAAc,MACd,cAAe,GACvB,CAAK,EACDtB,EAAQ,GAAG,sBAAuB,UAAY,CAClD,CAAK,EAEDA,EAAQ,GAAG,uBAAwB,SAAUuB,EAAG,CAC5C,QAAQ,IAAIA,CAAC,CACrB,CAAC"}